<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC '-//mybatis.org//DTD Mapper 3.0//EN' 'http://mybatis.org/dtd/mybatis-3-mapper.dtd'>
<mapper namespace='com.chunjae.doctormath.main.operation.student.mapper.StudentMapper'>

    <select id="getList" parameterType="java.util.LinkedHashMap" resultType="java.util.LinkedHashMap" >
        SELECT
            A.HakwonCode,
            A.StudentCode,
            A.Name,
            A.Gender,
            CASE A.Curri WHEN 'E' THEN '초' WHEN 'M' THEN '중' ELSE '고' END AS Curri,
            A.Grade,
            CASE A.Status WHEN 'P' THEN '휴원' WHEN 'O' THEN '퇴원' ELSE '재원' END AS Status,
            D.UserID,
            C.SchoolName,
            CONVERT(A.SHtell, varchar(20)) AS SHtell,
            CONVERT(A.PHtell, varchar(20)) AS PHtell,
            A.Curri,
            A.Status
        FROM MEM_Student AS A
        LEFT JOIN COM_School AS C ON (A.School = C.Seq)
        LEFT JOIN MEM_Member D ON A.StudentCode = D.CODE
        WHERE 1=1
        AND A.HakwonCode = #{HakwonCode}
        AND A.Status != 'W'
        <if test="TeacherCode != null and TeacherCode != '' ">
        AND A.TeacherCode = #{TeacherCode}
        </if>
        <if test="ClassCode != null and ClassCode != '' ">
            AND A.ClassCode = #{ClassCode}
        </if>
        <if test="searchType=='name' and keyword != null and keyword != '' ">
            AND A.Name LIKE CONCAT('%', #{keyword},'%')
        </if>
        <if test="searchType=='grade' and keyword != null and keyword != '' ">
            AND A.Curri LIKE CONCAT('%', #{Curri},'%')
            AND A.Grade LIKE CONCAT('%', #{Grade},'%')
        </if>
        <if test="searchType=='status' and keyword != null and keyword != '' ">
            AND A.Status LIKE CONCAT('%', #{Status},'%')
        </if>
        <if test="searchType=='phone' and keyword != null and keyword != '' ">
            AND A.SHtell LIKE CONCAT('%', #{keyword},'%')
        </if>
    </select>

    <select id="getDetailList" parameterType="java.util.LinkedHashMap" resultType="java.util.LinkedHashMap" >
        SELECT
            A.HakwonCode,
            A.StudentCode,
            A.School,
            A.Grade,
            A.Curri,
            A.TeacherCode,
            A.Memo,
            A.Name,
            A.ClassCode,
            CONVERT(A.SHtell, varchar(20)) AS SHtell,
            CONVERT(A.PHtell, varchar(20)) AS PHtell,
            A.PostNum,
            A.Addr1,
            C.Sido,
            C.Gu,
            C.SchoolName,
            A.Status,
            A.StudyGrade,
            A.Email,
            DATE_FORMAT(A.Birth, '%Y-%m-%d') AS Birth,
            DATE_FORMAT(A.CreDate, '%Y-%m-%d') AS CreDate,
            B.UserID,
            B.ParentID
        FROM
            MEM_Student AS A
            LEFT JOIN MEM_Member B ON (A.StudentCode = B.code)
            LEFT JOIN COM_School C ON (A.School = C.Seq)
        Where 1=1
        <if test="StudentCode != null and StudentCode != '' ">
        AND A.StudentCode = #{StudentCode}
        </if>
    </select>

    <select id="sidoList" resultType="java.util.LinkedHashMap" >
        SELECT Sido
        FROM COM_School
        GROUP BY Sido
        ORDER BY Sido ASC
    </select>

    <select id="guList" parameterType="java.util.LinkedHashMap" resultType="java.util.LinkedHashMap" >
        SELECT Gu
        FROM COM_School
        <if test="Sido != null and Sido != '' ">
        WHERE Sido = #{Sido}
        </if>
        GROUP BY Gu
        ORDER BY Gu ASC
    </select>
    
    <update id="updateList" parameterType="java.util.LinkedHashMap">
        UPDATE
            MEM_Student A
        SET
            A.Name = #{Name},
            A.Curri = #{Curri},
            A.Grade = #{Grade},
            A.Status = #{Status},
            A.SHtell = #{SHtell},
            A.PHtell = #{PHtell},
            A.Email = #{Email},
            A.PostNum = #{PostNum},
            A.Addr1 = #{Addr1},
            A.Birth = #{Birth},
            A.CreDate = #{CreDate},
            A.Memo = #{Memo}
        WHERE A.StudentCode = #{StudentCode}
        <if test="SchoolName != null and SchoolName != '' ">
            A.School = (SELECT B.Seq FROM COM_School B WHERE B.SchoolName = #{SchoolName} AND B.Sido = #{Sido} AND B.Gu = #{Gu})
        </if>
    </update>
</mapper>